

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 09 23:05:51 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataBANK0
   217  01F8                     __pidataBANK0:
   218                           
   219                           ;initializer for _tabla
   220  01F8  343F               	retlw	63
   221  01F9  3406               	retlw	6
   222  01FA  345B               	retlw	91
   223  01FB  344F               	retlw	79
   224  01FC  3466               	retlw	102
   225  01FD  346D               	retlw	109
   226  01FE  347D               	retlw	125
   227  01FF  3407               	retlw	7
   228  0200  347F               	retlw	127
   229  0201  346F               	retlw	111
   230                           
   231                           	psect	nvBANK0
   232  0033                     __pnvBANK0:
   233  0033                     _sobr:
   234  0033                     	ds	2
   235  0035                     _centena:
   236  0035                     	ds	2
   237  0037                     _decena:
   238  0037                     	ds	2
   239  0039                     _unidad:
   240  0039                     	ds	2
   241  0008                     _PORTDbits	set	8
   242  0008                     _PORTD	set	8
   243  0006                     _PORTBbits	set	6
   244  0001                     _TMR0	set	1
   245  000B                     _INTCONbits	set	11
   246  0007                     _PORTC	set	7
   247  0005                     _PORTA	set	5
   248  005A                     _T0IF	set	90
   249  008F                     _OSCCONbits	set	143
   250  0096                     _IOCBbits	set	150
   251  0095                     _WPUBbits	set	149
   252  0081                     _OPTION_REGbits	set	129
   253  0086                     _TRISBbits	set	134
   254  0088                     _TRISD	set	136
   255  0087                     _TRISC	set	135
   256  0085                     _TRISA	set	133
   257  0189                     _ANSELH	set	393
   258  0188                     _ANSEL	set	392
   259                           
   260                           	psect	cinit
   261  0011                     start_initialization:	
   262                           ; #config settings
   263                           
   264  0011                     __initialization:
   265                           
   266                           ; Initialize objects allocated to BANK0
   267  0011  1383               	bcf	3,7	;select IRP bank0
   268  0012  302A               	movlw	low (__pdataBANK0+10)
   269  0013  00FD               	movwf	btemp+-1
   270  0014  3001               	movlw	high __pidataBANK0
   271  0015  00FE               	movwf	btemp
   272  0016  30F8               	movlw	low __pidataBANK0
   273  0017  00FF               	movwf	btemp+1
   274  0018  3020               	movlw	low __pdataBANK0
   275  0019  0084               	movwf	4
   276  001A  120A  118A  21DB  120A  118A  	fcall	init_ram0
   277                           
   278                           ; Clear objects allocated to BANK0
   279  001F  01BB               	clrf	__pbssBANK0& (0+127)
   280  0020  01BC               	clrf	(__pbssBANK0+1)& (0+127)
   281                           
   282                           ; Clear objects allocated to COMMON
   283  0021  01F5               	clrf	__pbssCOMMON& (0+127)
   284  0022  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   285  0023  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   286  0024  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   287  0025                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  0025                     __end_of__initialization:
   291  0025  0183               	clrf	3
   292  0026  120A  118A  29EA   	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMMON
   295  0075                     __pbssCOMMON:
   296  0075                     _band:
   297  0075                     	ds	2
   298  0077                     _conta:
   299  0077                     	ds	1
   300  0078                     _acumulador:
   301  0078                     	ds	1
   302                           
   303                           	psect	bssBANK0
   304  003B                     __pbssBANK0:
   305  003B                     _display:
   306  003B                     	ds	2
   307                           
   308                           	psect	dataBANK0
   309  0020                     __pdataBANK0:
   310  0020                     _tabla:
   311  0020                     	ds	10
   312                           
   313                           	psect	inittext
   314  01D7                     init_fetch0:	
   315                           ;	Called with low address in FSR and high address in W
   316                           
   317  01D7  087E               	movf	btemp,w
   318  01D8  008A               	movwf	10
   319  01D9  087F               	movf	btemp+1,w
   320  01DA  0082               	movwf	2
   321  01DB                     init_ram0:	
   322                           ;Called with:
   323                           ;	high address of idata address in btemp 
   324                           ;	low address of idata address in btemp+1 
   325                           ;	low address of data in FSR
   326                           ;	high address + 1 of data in btemp-1
   327                           
   328  01DB  120A  118A  21D7  120A  118A  	fcall	init_fetch0
   329  01E0  0080               	movwf	0
   330  01E1  0A84               	incf	4,f
   331  01E2  0804               	movf	4,w
   332  01E3  067D               	xorwf	btemp+-1,w
   333  01E4  1903               	btfsc	3,2
   334  01E5  3400               	retlw	0
   335  01E6  0AFF               	incf	btemp+1,f
   336  01E7  1903               	btfsc	3,2
   337  01E8  0AFE               	incf	btemp,f
   338  01E9  29DB               	goto	init_ram0
   339                           
   340                           	psect	cstackCOMMON
   341  0070                     __pcstackCOMMON:
   342  0070                     ?_setup:
   343  0070                     ?_isr:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ??_isr:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_main:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_mostrar:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 2 bytes @ 0x0
   357  0070                     	ds	5
   358  0075                     ??_setup:
   359  0075                     ??_mostrar:	
   360                           ; 1 bytes @ 0x5
   361                           
   362  0075                     ??_main:	
   363                           ; 1 bytes @ 0x5
   364                           
   365                           
   366                           	psect	cstackBANK0
   367  002A                     __pcstackBANK0:	
   368                           ; 1 bytes @ 0x5
   369                           
   370  002A                     ?___awdiv:
   371  002A                     ?___awmod:	
   372                           ; 2 bytes @ 0x0
   373                           
   374  002A                     ___awdiv@divisor:	
   375                           ; 2 bytes @ 0x0
   376                           
   377  002A                     ___awmod@divisor:	
   378                           ; 2 bytes @ 0x0
   379                           
   380                           
   381                           ; 2 bytes @ 0x0
   382  002A                     	ds	2
   383  002C                     ___awdiv@dividend:
   384  002C                     ___awmod@dividend:	
   385                           ; 2 bytes @ 0x2
   386                           
   387                           
   388                           ; 2 bytes @ 0x2
   389  002C                     	ds	2
   390  002E                     ??___awdiv:
   391  002E                     ??___awmod:	
   392                           ; 1 bytes @ 0x4
   393                           
   394                           
   395                           ; 1 bytes @ 0x4
   396  002E                     	ds	1
   397  002F                     ___awdiv@counter:
   398  002F                     ___awmod@counter:	
   399                           ; 1 bytes @ 0x5
   400                           
   401                           
   402                           ; 1 bytes @ 0x5
   403  002F                     	ds	1
   404  0030                     ___awdiv@sign:
   405  0030                     ___awmod@sign:	
   406                           ; 1 bytes @ 0x6
   407                           
   408                           
   409                           ; 1 bytes @ 0x6
   410  0030                     	ds	1
   411  0031                     ___awdiv@quotient:
   412                           
   413                           ; 2 bytes @ 0x7
   414  0031                     	ds	2
   415                           
   416                           	psect	maintext
   417  01EA                     __pmaintext:	
   418 ;;
   419 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   420 ;;
   421 ;; *************** function _main *****************
   422 ;; Defined at:
   423 ;;		line 143 in file "lab07.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          0       0       0       0       0
   440 ;;      Totals:         0       0       0       0       0
   441 ;;Total ram usage:        0 bytes
   442 ;; Hardware stack levels required when called: 3
   443 ;; This function calls:
   444 ;;		_mostrar
   445 ;;		_setup
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451  01EA                     _main:	
   452                           ;psect for function _main
   453                           
   454  01EA                     l1080:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   457                           
   458                           
   459                           ;lab07.c: 144:     setup();
   460  01EA  120A  118A  21A6  120A  118A  	fcall	_setup
   461  01EF                     l81:	
   462                           ;lab07.c: 145:     while(1){
   463                           
   464                           
   465                           ;lab07.c: 147:         mostrar();
   466  01EF  120A  118A  2157  120A  118A  	fcall	_mostrar
   467  01F4  29EF               	goto	l81
   468  01F5  120A  118A  280E   	ljmp	start
   469  01F8                     __end_of_main:
   470                           
   471                           	psect	text1
   472  01A6                     __ptext1:	
   473 ;; *************** function _setup *****************
   474 ;; Defined at:
   475 ;;		line 47 in file "lab07.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0
   492 ;;      Totals:         0       0       0       0       0
   493 ;;Total ram usage:        0 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503  01A6                     _setup:	
   504                           ;psect for function _setup
   505                           
   506  01A6                     l758:	
   507                           ;incstack = 0
   508                           ; Regs used in _setup: [wreg+status,2+status,0]
   509                           
   510                           
   511                           ;lab07.c: 48:     ANSEL = 0;
   512  01A6  1683               	bsf	3,5	;RP0=1, select bank3
   513  01A7  1703               	bsf	3,6	;RP1=1, select bank3
   514  01A8  0188               	clrf	8	;volatile
   515                           
   516                           ;lab07.c: 49:     ANSELH = 0;
   517  01A9  0189               	clrf	9	;volatile
   518                           
   519                           ;lab07.c: 51:     TRISA = 0x00;
   520  01AA  1683               	bsf	3,5	;RP0=1, select bank1
   521  01AB  1303               	bcf	3,6	;RP1=0, select bank1
   522  01AC  0185               	clrf	5	;volatile
   523                           
   524                           ;lab07.c: 52:     PORTA = 0;
   525  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   526  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   527  01AF  0185               	clrf	5	;volatile
   528                           
   529                           ;lab07.c: 53:     TRISC = 0;
   530  01B0  1683               	bsf	3,5	;RP0=1, select bank1
   531  01B1  1303               	bcf	3,6	;RP1=0, select bank1
   532  01B2  0187               	clrf	7	;volatile
   533                           
   534                           ;lab07.c: 54:     TRISD = 0;
   535  01B3  0188               	clrf	8	;volatile
   536                           
   537                           ;lab07.c: 55:     PORTC = 0;
   538  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   539  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   540  01B6  0187               	clrf	7	;volatile
   541  01B7                     l760:
   542                           
   543                           ;lab07.c: 58:     TRISBbits.TRISB0 = 1;
   544  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   545  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   546  01B9  1406               	bsf	6,0	;volatile
   547  01BA                     l762:
   548                           
   549                           ;lab07.c: 59:     TRISBbits.TRISB1 = 1;
   550  01BA  1486               	bsf	6,1	;volatile
   551  01BB                     l764:
   552                           
   553                           ;lab07.c: 60:     OPTION_REGbits.nRBPU = 0;
   554  01BB  1381               	bcf	1,7	;volatile
   555  01BC                     l766:
   556                           
   557                           ;lab07.c: 61:     WPUBbits.WPUB0 = 1;
   558  01BC  1415               	bsf	21,0	;volatile
   559  01BD                     l768:
   560                           
   561                           ;lab07.c: 62:     WPUBbits.WPUB1 = 1;
   562  01BD  1495               	bsf	21,1	;volatile
   563  01BE                     l770:
   564                           
   565                           ;lab07.c: 64:     INTCONbits.GIE = 1;
   566  01BE  178B               	bsf	11,7	;volatile
   567  01BF                     l772:
   568                           
   569                           ;lab07.c: 65:     INTCONbits.RBIE = 1;
   570  01BF  158B               	bsf	11,3	;volatile
   571  01C0                     l774:
   572                           
   573                           ;lab07.c: 66:     IOCBbits.IOCB0 = 1;
   574  01C0  1416               	bsf	22,0	;volatile
   575  01C1                     l776:
   576                           
   577                           ;lab07.c: 67:     IOCBbits.IOCB1 = 1;
   578  01C1  1496               	bsf	22,1	;volatile
   579  01C2                     l778:
   580                           
   581                           ;lab07.c: 68:     INTCONbits.RBIF = 0;
   582  01C2  100B               	bcf	11,0	;volatile
   583  01C3                     l780:
   584                           
   585                           ;lab07.c: 70:     OPTION_REGbits.T0CS = 0;
   586  01C3  1281               	bcf	1,5	;volatile
   587  01C4                     l782:
   588                           
   589                           ;lab07.c: 71:     OPTION_REGbits.PSA = 0;
   590  01C4  1181               	bcf	1,3	;volatile
   591  01C5                     l784:
   592                           
   593                           ;lab07.c: 72:     OPTION_REGbits.PS0 = 1;
   594  01C5  1401               	bsf	1,0	;volatile
   595  01C6                     l786:
   596                           
   597                           ;lab07.c: 73:     OPTION_REGbits.PS1 = 1;
   598  01C6  1481               	bsf	1,1	;volatile
   599  01C7                     l788:
   600                           
   601                           ;lab07.c: 74:     OPTION_REGbits.PS2 = 1;
   602  01C7  1501               	bsf	1,2	;volatile
   603  01C8                     l790:
   604                           
   605                           ;lab07.c: 76:     INTCONbits.T0IF = 0;
   606  01C8  110B               	bcf	11,2	;volatile
   607  01C9                     l792:
   608                           
   609                           ;lab07.c: 77:     TMR0 = 250;
   610  01C9  30FA               	movlw	250
   611  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   612  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   613  01CC  0081               	movwf	1	;volatile
   614  01CD                     l794:
   615                           
   616                           ;lab07.c: 79:     INTCONbits.T0IE = 1;
   617  01CD  168B               	bsf	11,5	;volatile
   618  01CE                     l796:
   619                           
   620                           ;lab07.c: 80:     INTCONbits.T0IF = 0;
   621  01CE  110B               	bcf	11,2	;volatile
   622  01CF                     l798:
   623                           
   624                           ;lab07.c: 83:     OSCCONbits.IRCF = 0b0110;
   625  01CF  1683               	bsf	3,5	;RP0=1, select bank1
   626  01D0  1303               	bcf	3,6	;RP1=0, select bank1
   627  01D1  080F               	movf	15,w	;volatile
   628  01D2  398F               	andlw	-113
   629  01D3  3860               	iorlw	96
   630  01D4  008F               	movwf	15	;volatile
   631  01D5                     l800:
   632                           
   633                           ;lab07.c: 84:     OSCCONbits.SCS = 1;
   634  01D5  140F               	bsf	15,0	;volatile
   635  01D6                     l57:
   636  01D6  0008               	return
   637  01D7                     __end_of_setup:
   638                           
   639                           	psect	text2
   640  0157                     __ptext2:	
   641 ;; *************** function _mostrar *****************
   642 ;; Defined at:
   643 ;;		line 136 in file "lab07.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  2   75[None  ] int 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0, pclath, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used: 1
   663 ;; Hardware stack levels required when called: 2
   664 ;; This function calls:
   665 ;;		___awdiv
   666 ;;		___awmod
   667 ;; This function is called by:
   668 ;;		_main
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672  0157                     _mostrar:	
   673                           ;psect for function _mostrar
   674                           
   675  0157                     l1078:	
   676                           ;incstack = 0
   677                           ; Regs used in _mostrar: [wreg+status,2+status,0+pclath+cstack]
   678                           
   679                           
   680                           ;lab07.c: 138:     sobr = display%100;
   681  0157  3064               	movlw	100
   682  0158  1283               	bcf	3,5	;RP0=0, select bank0
   683  0159  1303               	bcf	3,6	;RP1=0, select bank0
   684  015A  00AA               	movwf	___awmod@divisor
   685  015B  3000               	movlw	0
   686  015C  00AB               	movwf	___awmod@divisor+1
   687  015D  083C               	movf	_display+1,w
   688  015E  00AD               	movwf	___awmod@dividend+1
   689  015F  083B               	movf	_display,w
   690  0160  00AC               	movwf	___awmod@dividend
   691  0161  120A  118A  20FC  120A  118A  	fcall	___awmod
   692  0166  1283               	bcf	3,5	;RP0=0, select bank0
   693  0167  1303               	bcf	3,6	;RP1=0, select bank0
   694  0168  082B               	movf	?___awmod+1,w
   695  0169  00B4               	movwf	_sobr+1
   696  016A  082A               	movf	?___awmod,w
   697  016B  00B3               	movwf	_sobr
   698                           
   699                           ;lab07.c: 139:     unidad = sobr%10;
   700  016C  300A               	movlw	10
   701  016D  00AA               	movwf	___awmod@divisor
   702  016E  3000               	movlw	0
   703  016F  00AB               	movwf	___awmod@divisor+1
   704  0170  0834               	movf	_sobr+1,w
   705  0171  00AD               	movwf	___awmod@dividend+1
   706  0172  0833               	movf	_sobr,w
   707  0173  00AC               	movwf	___awmod@dividend
   708  0174  120A  118A  20FC  120A  118A  	fcall	___awmod
   709  0179  1283               	bcf	3,5	;RP0=0, select bank0
   710  017A  1303               	bcf	3,6	;RP1=0, select bank0
   711  017B  082B               	movf	?___awmod+1,w
   712  017C  00BA               	movwf	_unidad+1
   713  017D  082A               	movf	?___awmod,w
   714  017E  00B9               	movwf	_unidad
   715                           
   716                           ;lab07.c: 140:     decena = sobr/10;
   717  017F  300A               	movlw	10
   718  0180  00AA               	movwf	___awdiv@divisor
   719  0181  3000               	movlw	0
   720  0182  00AB               	movwf	___awdiv@divisor+1
   721  0183  0834               	movf	_sobr+1,w
   722  0184  00AD               	movwf	___awdiv@dividend+1
   723  0185  0833               	movf	_sobr,w
   724  0186  00AC               	movwf	___awdiv@dividend
   725  0187  120A  118A  2093  120A  118A  	fcall	___awdiv
   726  018C  1283               	bcf	3,5	;RP0=0, select bank0
   727  018D  1303               	bcf	3,6	;RP1=0, select bank0
   728  018E  082B               	movf	?___awdiv+1,w
   729  018F  00B8               	movwf	_decena+1
   730  0190  082A               	movf	?___awdiv,w
   731  0191  00B7               	movwf	_decena
   732                           
   733                           ;lab07.c: 141:     centena = display/100;
   734  0192  3064               	movlw	100
   735  0193  00AA               	movwf	___awdiv@divisor
   736  0194  3000               	movlw	0
   737  0195  00AB               	movwf	___awdiv@divisor+1
   738  0196  083C               	movf	_display+1,w
   739  0197  00AD               	movwf	___awdiv@dividend+1
   740  0198  083B               	movf	_display,w
   741  0199  00AC               	movwf	___awdiv@dividend
   742  019A  120A  118A  2093  120A  118A  	fcall	___awdiv
   743  019F  1283               	bcf	3,5	;RP0=0, select bank0
   744  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   745  01A1  082B               	movf	?___awdiv+1,w
   746  01A2  00B6               	movwf	_centena+1
   747  01A3  082A               	movf	?___awdiv,w
   748  01A4  00B5               	movwf	_centena
   749  01A5                     l76:
   750  01A5  0008               	return
   751  01A6                     __end_of_mostrar:
   752                           
   753                           	psect	text3
   754  00FC                     __ptext3:	
   755 ;; *************** function ___awmod *****************
   756 ;; Defined at:
   757 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  divisor         2    0[BANK0 ] int 
   760 ;;  dividend        2    2[BANK0 ] int 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  sign            1    6[BANK0 ] unsigned char 
   763 ;;  counter         1    5[BANK0 ] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2    0[BANK0 ] int 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         0       4       0       0       0
   774 ;;      Locals:         0       2       0       0       0
   775 ;;      Temps:          0       1       0       0       0
   776 ;;      Totals:         0       7       0       0       0
   777 ;;Total ram usage:        7 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; Hardware stack levels required when called: 1
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_mostrar
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787  00FC                     ___awmod:	
   788                           ;psect for function ___awmod
   789                           
   790  00FC                     l1040:	
   791                           ;incstack = 0
   792                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   793                           
   794  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   795  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   796  00FE  01B0               	clrf	___awmod@sign
   797  00FF                     l1042:
   798  00FF  1FAD               	btfss	___awmod@dividend+1,7
   799  0100  2902               	goto	u631
   800  0101  2903               	goto	u630
   801  0102                     u631:
   802  0102  290A               	goto	l1048
   803  0103                     u630:
   804  0103                     l1044:
   805  0103  09AC               	comf	___awmod@dividend,f
   806  0104  09AD               	comf	___awmod@dividend+1,f
   807  0105  0AAC               	incf	___awmod@dividend,f
   808  0106  1903               	skipnz
   809  0107  0AAD               	incf	___awmod@dividend+1,f
   810  0108                     l1046:
   811  0108  01B0               	clrf	___awmod@sign
   812  0109  0AB0               	incf	___awmod@sign,f
   813  010A                     l1048:
   814  010A  1FAB               	btfss	___awmod@divisor+1,7
   815  010B  290D               	goto	u641
   816  010C  290E               	goto	u640
   817  010D                     u641:
   818  010D  2913               	goto	l1052
   819  010E                     u640:
   820  010E                     l1050:
   821  010E  09AA               	comf	___awmod@divisor,f
   822  010F  09AB               	comf	___awmod@divisor+1,f
   823  0110  0AAA               	incf	___awmod@divisor,f
   824  0111  1903               	skipnz
   825  0112  0AAB               	incf	___awmod@divisor+1,f
   826  0113                     l1052:
   827  0113  082A               	movf	___awmod@divisor,w
   828  0114  042B               	iorwf	___awmod@divisor+1,w
   829  0115  1903               	btfsc	3,2
   830  0116  2918               	goto	u651
   831  0117  2919               	goto	u650
   832  0118                     u651:
   833  0118  2948               	goto	l1070
   834  0119                     u650:
   835  0119                     l1054:
   836  0119  01AF               	clrf	___awmod@counter
   837  011A  0AAF               	incf	___awmod@counter,f
   838  011B  2927               	goto	l1060
   839  011C                     l1056:
   840  011C  3001               	movlw	1
   841  011D                     u665:
   842  011D  1003               	clrc
   843  011E  0DAA               	rlf	___awmod@divisor,f
   844  011F  0DAB               	rlf	___awmod@divisor+1,f
   845  0120  3EFF               	addlw	-1
   846  0121  1D03               	skipz
   847  0122  291D               	goto	u665
   848  0123                     l1058:
   849  0123  3001               	movlw	1
   850  0124  00AE               	movwf	??___awmod
   851  0125  082E               	movf	??___awmod,w
   852  0126  07AF               	addwf	___awmod@counter,f
   853  0127                     l1060:
   854  0127  1FAB               	btfss	___awmod@divisor+1,7
   855  0128  292A               	goto	u671
   856  0129  292B               	goto	u670
   857  012A                     u671:
   858  012A  291C               	goto	l1056
   859  012B                     u670:
   860  012B                     l1062:
   861  012B  082B               	movf	___awmod@divisor+1,w
   862  012C  022D               	subwf	___awmod@dividend+1,w
   863  012D  1D03               	skipz
   864  012E  2931               	goto	u685
   865  012F  082A               	movf	___awmod@divisor,w
   866  0130  022C               	subwf	___awmod@dividend,w
   867  0131                     u685:
   868  0131  1C03               	skipc
   869  0132  2934               	goto	u681
   870  0133  2935               	goto	u680
   871  0134                     u681:
   872  0134  293B               	goto	l1066
   873  0135                     u680:
   874  0135                     l1064:
   875  0135  082A               	movf	___awmod@divisor,w
   876  0136  02AC               	subwf	___awmod@dividend,f
   877  0137  082B               	movf	___awmod@divisor+1,w
   878  0138  1C03               	skipc
   879  0139  03AD               	decf	___awmod@dividend+1,f
   880  013A  02AD               	subwf	___awmod@dividend+1,f
   881  013B                     l1066:
   882  013B  3001               	movlw	1
   883  013C                     u695:
   884  013C  1003               	clrc
   885  013D  0CAB               	rrf	___awmod@divisor+1,f
   886  013E  0CAA               	rrf	___awmod@divisor,f
   887  013F  3EFF               	addlw	-1
   888  0140  1D03               	skipz
   889  0141  293C               	goto	u695
   890  0142                     l1068:
   891  0142  3001               	movlw	1
   892  0143  02AF               	subwf	___awmod@counter,f
   893  0144  1D03               	btfss	3,2
   894  0145  2947               	goto	u701
   895  0146  2948               	goto	u700
   896  0147                     u701:
   897  0147  292B               	goto	l1062
   898  0148                     u700:
   899  0148                     l1070:
   900  0148  0830               	movf	___awmod@sign,w
   901  0149  1903               	btfsc	3,2
   902  014A  294C               	goto	u711
   903  014B  294D               	goto	u710
   904  014C                     u711:
   905  014C  2952               	goto	l1074
   906  014D                     u710:
   907  014D                     l1072:
   908  014D  09AC               	comf	___awmod@dividend,f
   909  014E  09AD               	comf	___awmod@dividend+1,f
   910  014F  0AAC               	incf	___awmod@dividend,f
   911  0150  1903               	skipnz
   912  0151  0AAD               	incf	___awmod@dividend+1,f
   913  0152                     l1074:
   914  0152  082D               	movf	___awmod@dividend+1,w
   915  0153  00AB               	movwf	?___awmod+1
   916  0154  082C               	movf	___awmod@dividend,w
   917  0155  00AA               	movwf	?___awmod
   918  0156                     l336:
   919  0156  0008               	return
   920  0157                     __end_of___awmod:
   921                           
   922                           	psect	text4
   923  0093                     __ptext4:	
   924 ;; *************** function ___awdiv *****************
   925 ;; Defined at:
   926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  divisor         2    0[BANK0 ] int 
   929 ;;  dividend        2    2[BANK0 ] int 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  quotient        2    7[BANK0 ] int 
   932 ;;  sign            1    6[BANK0 ] unsigned char 
   933 ;;  counter         1    5[BANK0 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  2    0[BANK0 ] int 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       4       0       0       0
   944 ;;      Locals:         0       4       0       0       0
   945 ;;      Temps:          0       1       0       0       0
   946 ;;      Totals:         0       9       0       0       0
   947 ;;Total ram usage:        9 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 1
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_mostrar
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957  0093                     ___awdiv:	
   958                           ;psect for function ___awdiv
   959                           
   960  0093                     l996:	
   961                           ;incstack = 0
   962                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   963                           
   964  0093  1283               	bcf	3,5	;RP0=0, select bank0
   965  0094  1303               	bcf	3,6	;RP1=0, select bank0
   966  0095  01B0               	clrf	___awdiv@sign
   967  0096                     l998:
   968  0096  1FAB               	btfss	___awdiv@divisor+1,7
   969  0097  2899               	goto	u531
   970  0098  289A               	goto	u530
   971  0099                     u531:
   972  0099  28A1               	goto	l1004
   973  009A                     u530:
   974  009A                     l1000:
   975  009A  09AA               	comf	___awdiv@divisor,f
   976  009B  09AB               	comf	___awdiv@divisor+1,f
   977  009C  0AAA               	incf	___awdiv@divisor,f
   978  009D  1903               	skipnz
   979  009E  0AAB               	incf	___awdiv@divisor+1,f
   980  009F                     l1002:
   981  009F  01B0               	clrf	___awdiv@sign
   982  00A0  0AB0               	incf	___awdiv@sign,f
   983  00A1                     l1004:
   984  00A1  1FAD               	btfss	___awdiv@dividend+1,7
   985  00A2  28A4               	goto	u541
   986  00A3  28A5               	goto	u540
   987  00A4                     u541:
   988  00A4  28AE               	goto	l1010
   989  00A5                     u540:
   990  00A5                     l1006:
   991  00A5  09AC               	comf	___awdiv@dividend,f
   992  00A6  09AD               	comf	___awdiv@dividend+1,f
   993  00A7  0AAC               	incf	___awdiv@dividend,f
   994  00A8  1903               	skipnz
   995  00A9  0AAD               	incf	___awdiv@dividend+1,f
   996  00AA                     l1008:
   997  00AA  3001               	movlw	1
   998  00AB  00AE               	movwf	??___awdiv
   999  00AC  082E               	movf	??___awdiv,w
  1000  00AD  06B0               	xorwf	___awdiv@sign,f
  1001  00AE                     l1010:
  1002  00AE  01B1               	clrf	___awdiv@quotient
  1003  00AF  01B2               	clrf	___awdiv@quotient+1
  1004  00B0                     l1012:
  1005  00B0  082A               	movf	___awdiv@divisor,w
  1006  00B1  042B               	iorwf	___awdiv@divisor+1,w
  1007  00B2  1903               	btfsc	3,2
  1008  00B3  28B5               	goto	u551
  1009  00B4  28B6               	goto	u550
  1010  00B5                     u551:
  1011  00B5  28ED               	goto	l1032
  1012  00B6                     u550:
  1013  00B6                     l1014:
  1014  00B6  01AF               	clrf	___awdiv@counter
  1015  00B7  0AAF               	incf	___awdiv@counter,f
  1016  00B8  28C4               	goto	l1020
  1017  00B9                     l1016:
  1018  00B9  3001               	movlw	1
  1019  00BA                     u565:
  1020  00BA  1003               	clrc
  1021  00BB  0DAA               	rlf	___awdiv@divisor,f
  1022  00BC  0DAB               	rlf	___awdiv@divisor+1,f
  1023  00BD  3EFF               	addlw	-1
  1024  00BE  1D03               	skipz
  1025  00BF  28BA               	goto	u565
  1026  00C0                     l1018:
  1027  00C0  3001               	movlw	1
  1028  00C1  00AE               	movwf	??___awdiv
  1029  00C2  082E               	movf	??___awdiv,w
  1030  00C3  07AF               	addwf	___awdiv@counter,f
  1031  00C4                     l1020:
  1032  00C4  1FAB               	btfss	___awdiv@divisor+1,7
  1033  00C5  28C7               	goto	u571
  1034  00C6  28C8               	goto	u570
  1035  00C7                     u571:
  1036  00C7  28B9               	goto	l1016
  1037  00C8                     u570:
  1038  00C8                     l1022:
  1039  00C8  3001               	movlw	1
  1040  00C9                     u585:
  1041  00C9  1003               	clrc
  1042  00CA  0DB1               	rlf	___awdiv@quotient,f
  1043  00CB  0DB2               	rlf	___awdiv@quotient+1,f
  1044  00CC  3EFF               	addlw	-1
  1045  00CD  1D03               	skipz
  1046  00CE  28C9               	goto	u585
  1047  00CF  082B               	movf	___awdiv@divisor+1,w
  1048  00D0  022D               	subwf	___awdiv@dividend+1,w
  1049  00D1  1D03               	skipz
  1050  00D2  28D5               	goto	u595
  1051  00D3  082A               	movf	___awdiv@divisor,w
  1052  00D4  022C               	subwf	___awdiv@dividend,w
  1053  00D5                     u595:
  1054  00D5  1C03               	skipc
  1055  00D6  28D8               	goto	u591
  1056  00D7  28D9               	goto	u590
  1057  00D8                     u591:
  1058  00D8  28E0               	goto	l1028
  1059  00D9                     u590:
  1060  00D9                     l1024:
  1061  00D9  082A               	movf	___awdiv@divisor,w
  1062  00DA  02AC               	subwf	___awdiv@dividend,f
  1063  00DB  082B               	movf	___awdiv@divisor+1,w
  1064  00DC  1C03               	skipc
  1065  00DD  03AD               	decf	___awdiv@dividend+1,f
  1066  00DE  02AD               	subwf	___awdiv@dividend+1,f
  1067  00DF                     l1026:
  1068  00DF  1431               	bsf	___awdiv@quotient,0
  1069  00E0                     l1028:
  1070  00E0  3001               	movlw	1
  1071  00E1                     u605:
  1072  00E1  1003               	clrc
  1073  00E2  0CAB               	rrf	___awdiv@divisor+1,f
  1074  00E3  0CAA               	rrf	___awdiv@divisor,f
  1075  00E4  3EFF               	addlw	-1
  1076  00E5  1D03               	skipz
  1077  00E6  28E1               	goto	u605
  1078  00E7                     l1030:
  1079  00E7  3001               	movlw	1
  1080  00E8  02AF               	subwf	___awdiv@counter,f
  1081  00E9  1D03               	btfss	3,2
  1082  00EA  28EC               	goto	u611
  1083  00EB  28ED               	goto	u610
  1084  00EC                     u611:
  1085  00EC  28C8               	goto	l1022
  1086  00ED                     u610:
  1087  00ED                     l1032:
  1088  00ED  0830               	movf	___awdiv@sign,w
  1089  00EE  1903               	btfsc	3,2
  1090  00EF  28F1               	goto	u621
  1091  00F0  28F2               	goto	u620
  1092  00F1                     u621:
  1093  00F1  28F7               	goto	l1036
  1094  00F2                     u620:
  1095  00F2                     l1034:
  1096  00F2  09B1               	comf	___awdiv@quotient,f
  1097  00F3  09B2               	comf	___awdiv@quotient+1,f
  1098  00F4  0AB1               	incf	___awdiv@quotient,f
  1099  00F5  1903               	skipnz
  1100  00F6  0AB2               	incf	___awdiv@quotient+1,f
  1101  00F7                     l1036:
  1102  00F7  0832               	movf	___awdiv@quotient+1,w
  1103  00F8  00AB               	movwf	?___awdiv+1
  1104  00F9  0831               	movf	___awdiv@quotient,w
  1105  00FA  00AA               	movwf	?___awdiv
  1106  00FB                     l323:
  1107  00FB  0008               	return
  1108  00FC                     __end_of___awdiv:
  1109                           
  1110                           	psect	text5
  1111  0029                     __ptext5:	
  1112 ;; *************** function _isr *****************
  1113 ;; Defined at:
  1114 ;;		line 88 in file "lab07.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          5       0       0       0       0
  1131 ;;      Totals:         5       0       0       0       0
  1132 ;;Total ram usage:        5 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		Interrupt level 1
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141  0029                     _isr:	
  1142                           ;psect for function _isr
  1143                           
  1144  0029                     i1l942:
  1145                           
  1146                           ;lab07.c: 90:     if(INTCONbits.RBIF){
  1147  0029  1C0B               	btfss	11,0	;volatile
  1148  002A  282C               	goto	u46_21
  1149  002B  282D               	goto	u46_20
  1150  002C                     u46_21:
  1151  002C  2848               	goto	i1l62
  1152  002D                     u46_20:
  1153  002D                     i1l944:
  1154                           
  1155                           ;lab07.c: 91:         if (!PORTBbits.RB0){
  1156  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1157  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1158  002F  1806               	btfsc	6,0	;volatile
  1159  0030  2832               	goto	u47_21
  1160  0031  2833               	goto	u47_20
  1161  0032                     u47_21:
  1162  0032  283F               	goto	i1l63
  1163  0033                     u47_20:
  1164  0033                     i1l946:
  1165                           
  1166                           ;lab07.c: 92:             PORTA++;
  1167  0033  3001               	movlw	1
  1168  0034  00F0               	movwf	??_isr
  1169  0035  0870               	movf	??_isr,w
  1170  0036  0785               	addwf	5,f	;volatile
  1171  0037                     i1l948:
  1172                           
  1173                           ;lab07.c: 93:             display = PORTA;
  1174  0037  0805               	movf	5,w	;volatile
  1175  0038  00F0               	movwf	??_isr
  1176  0039  01F1               	clrf	??_isr+1
  1177  003A  0870               	movf	??_isr,w
  1178  003B  00BB               	movwf	_display
  1179  003C  0871               	movf	??_isr+1,w
  1180  003D  00BC               	movwf	_display+1
  1181                           
  1182                           ;lab07.c: 94:         }
  1183  003E  2846               	goto	i1l954
  1184  003F                     i1l63:	
  1185                           ;lab07.c: 95:         else if(!PORTBbits.RB1){
  1186                           
  1187  003F  1886               	btfsc	6,1	;volatile
  1188  0040  2842               	goto	u48_21
  1189  0041  2843               	goto	u48_20
  1190  0042                     u48_21:
  1191  0042  2846               	goto	i1l954
  1192  0043                     u48_20:
  1193  0043                     i1l950:
  1194                           
  1195                           ;lab07.c: 96:             PORTA--;
  1196  0043  3001               	movlw	1
  1197  0044  0285               	subwf	5,f	;volatile
  1198  0045  2837               	goto	i1l948
  1199  0046                     i1l954:
  1200                           
  1201                           ;lab07.c: 99:         INTCONbits.RBIF = 0;
  1202  0046  100B               	bcf	11,0	;volatile
  1203                           
  1204                           ;lab07.c: 100:     }
  1205  0047  288A               	goto	i1l73
  1206  0048                     i1l62:	
  1207                           ;lab07.c: 101:     else if(T0IF){
  1208                           
  1209  0048  1D0B               	btfss	11,2	;volatile
  1210  0049  284B               	goto	u49_21
  1211  004A  284C               	goto	u49_20
  1212  004B                     u49_21:
  1213  004B  288A               	goto	i1l73
  1214  004C                     u49_20:
  1215  004C                     i1l956:
  1216                           
  1217                           ;lab07.c: 102:         INTCONbits.T0IF = 0;
  1218  004C  110B               	bcf	11,2	;volatile
  1219  004D                     i1l958:
  1220                           
  1221                           ;lab07.c: 103:         TMR0 = 250;
  1222  004D  30FA               	movlw	250
  1223  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1224  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0050  0081               	movwf	1	;volatile
  1226  0051                     i1l960:
  1227                           
  1228                           ;lab07.c: 105:         PORTD = 0;
  1229  0051  0188               	clrf	8	;volatile
  1230  0052                     i1l962:
  1231                           
  1232                           ;lab07.c: 106:         if (band == 0)
  1233  0052  0875               	movf	_band,w
  1234  0053  0476               	iorwf	_band+1,w
  1235  0054  1D03               	btfss	3,2
  1236  0055  2857               	goto	u50_21
  1237  0056  2858               	goto	u50_20
  1238  0057                     u50_21:
  1239  0057  2865               	goto	i1l972
  1240  0058                     u50_20:
  1241  0058                     i1l964:
  1242                           
  1243                           ;lab07.c: 107:         {;lab07.c: 108:             PORTC = (tabla[unidad]);
  1244  0058  0839               	movf	_unidad,w
  1245  0059  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1246  005A  0084               	movwf	4
  1247  005B  1383               	bcf	3,7	;select IRP bank0
  1248  005C  0800               	movf	0,w
  1249  005D  0087               	movwf	7	;volatile
  1250  005E                     i1l966:
  1251                           
  1252                           ;lab07.c: 109:             PORTDbits.RD2 = 0;
  1253  005E  1108               	bcf	8,2	;volatile
  1254  005F                     i1l968:
  1255                           
  1256                           ;lab07.c: 110:             PORTDbits.RD0 = 1;
  1257  005F  1408               	bsf	8,0	;volatile
  1258  0060                     i1l970:
  1259                           
  1260                           ;lab07.c: 112:             band = 1;
  1261  0060  3001               	movlw	1
  1262  0061  00F5               	movwf	_band
  1263  0062  3000               	movlw	0
  1264  0063  00F6               	movwf	_band+1
  1265                           
  1266                           ;lab07.c: 113:         }
  1267  0064  288A               	goto	i1l73
  1268  0065                     i1l972:
  1269  0065  0375               	decf	_band,w
  1270  0066  0476               	iorwf	_band+1,w
  1271  0067  1D03               	btfss	3,2
  1272  0068  286A               	goto	u51_21
  1273  0069  286B               	goto	u51_20
  1274  006A                     u51_21:
  1275  006A  2878               	goto	i1l982
  1276  006B                     u51_20:
  1277  006B                     i1l974:
  1278                           
  1279                           ;lab07.c: 115:         {;lab07.c: 116:             PORTC = (tabla[decena]);
  1280  006B  0837               	movf	_decena,w
  1281  006C  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1282  006D  0084               	movwf	4
  1283  006E  1383               	bcf	3,7	;select IRP bank0
  1284  006F  0800               	movf	0,w
  1285  0070  0087               	movwf	7	;volatile
  1286  0071                     i1l976:
  1287                           
  1288                           ;lab07.c: 117:             PORTDbits.RD0 = 0;
  1289  0071  1008               	bcf	8,0	;volatile
  1290  0072                     i1l978:
  1291                           
  1292                           ;lab07.c: 118:             PORTDbits.RD1 = 1;
  1293  0072  1488               	bsf	8,1	;volatile
  1294  0073                     i1l980:
  1295                           
  1296                           ;lab07.c: 120:             band = 2;
  1297  0073  3002               	movlw	2
  1298  0074  00F5               	movwf	_band
  1299  0075  3000               	movlw	0
  1300  0076  00F6               	movwf	_band+1
  1301                           
  1302                           ;lab07.c: 121:         }
  1303  0077  288A               	goto	i1l73
  1304  0078                     i1l982:
  1305  0078  3002               	movlw	2
  1306  0079  0675               	xorwf	_band,w
  1307  007A  0476               	iorwf	_band+1,w
  1308  007B  1D03               	btfss	3,2
  1309  007C  287E               	goto	u52_21
  1310  007D  287F               	goto	u52_20
  1311  007E                     u52_21:
  1312  007E  288A               	goto	i1l67
  1313  007F                     u52_20:
  1314  007F                     i1l984:
  1315                           
  1316                           ;lab07.c: 123:         {;lab07.c: 124:             PORTC = (tabla[centena]);
  1317  007F  0835               	movf	_centena,w
  1318  0080  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1319  0081  0084               	movwf	4
  1320  0082  1383               	bcf	3,7	;select IRP bank0
  1321  0083  0800               	movf	0,w
  1322  0084  0087               	movwf	7	;volatile
  1323  0085                     i1l986:
  1324                           
  1325                           ;lab07.c: 125:             PORTDbits.RD1 = 0;
  1326  0085  1088               	bcf	8,1	;volatile
  1327  0086                     i1l988:
  1328                           
  1329                           ;lab07.c: 126:             PORTDbits.RD2 = 1;
  1330  0086  1508               	bsf	8,2	;volatile
  1331  0087                     i1l990:
  1332                           
  1333                           ;lab07.c: 128:             band = 0;
  1334  0087  01F5               	clrf	_band
  1335  0088  01F6               	clrf	_band+1
  1336  0089  288A               	goto	i1l73
  1337  008A                     i1l67:	
  1338                           ;lab07.c: 132:     }
  1339                           
  1340  008A                     i1l73:
  1341  008A  0874               	movf	??_isr+4,w
  1342  008B  008A               	movwf	10
  1343  008C  0873               	movf	??_isr+3,w
  1344  008D  0084               	movwf	4
  1345  008E  0E72               	swapf	??_isr+2,w
  1346  008F  0083               	movwf	3
  1347  0090  0EFE               	swapf	btemp,f
  1348  0091  0E7E               	swapf	btemp,w
  1349  0092  0009               	retfie
  1350  0093                     __end_of_isr:
  1351  007E                     btemp	set	126	;btemp
  1352  007E                     wtemp0	set	126
  1353                           
  1354                           	psect	intentry
  1355  0004                     __pintentry:	
  1356                           ;incstack = 0
  1357                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1358                           
  1359  0004                     interrupt_function:
  1360  007E                     saved_w	set	btemp
  1361  0004  00FE               	movwf	btemp
  1362  0005  0E03               	swapf	3,w
  1363  0006  00F2               	movwf	??_isr+2
  1364  0007  0804               	movf	4,w
  1365  0008  00F3               	movwf	??_isr+3
  1366  0009  080A               	movf	10,w
  1367  000A  00F4               	movwf	??_isr+4
  1368  000B  120A  118A  2829   	ljmp	_isr
  1369                           
  1370                           	psect	idloc
  1371                           
  1372                           ;Config register IDLOC0 @ 0x2000
  1373                           ;	unspecified, using default values
  1374  2000                     	org	8192
  1375  2000  3FFF               	dw	16383
  1376                           
  1377                           ;Config register IDLOC1 @ 0x2001
  1378                           ;	unspecified, using default values
  1379  2001                     	org	8193
  1380  2001  3FFF               	dw	16383
  1381                           
  1382                           ;Config register IDLOC2 @ 0x2002
  1383                           ;	unspecified, using default values
  1384  2002                     	org	8194
  1385  2002  3FFF               	dw	16383
  1386                           
  1387                           ;Config register IDLOC3 @ 0x2003
  1388                           ;	unspecified, using default values
  1389  2003                     	org	8195
  1390  2003  3FFF               	dw	16383
  1391                           
  1392                           	psect	config
  1393                           
  1394                           ;Config register CONFIG1 @ 0x2007
  1395                           ;	Oscillator Selection bits
  1396                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1397                           ;	Watchdog Timer Enable bit
  1398                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1399                           ;	Power-up Timer Enable bit
  1400                           ;	PWRTE = OFF, PWRT disabled
  1401                           ;	RE3/MCLR pin function select bit
  1402                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1403                           ;	Code Protection bit
  1404                           ;	CP = OFF, Program memory code protection is disabled
  1405                           ;	Data Code Protection bit
  1406                           ;	CPD = OFF, Data memory code protection is disabled
  1407                           ;	Brown Out Reset Selection bits
  1408                           ;	BOREN = OFF, BOR disabled
  1409                           ;	Internal External Switchover bit
  1410                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1411                           ;	Fail-Safe Clock Monitor Enabled bit
  1412                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1413                           ;	Low Voltage Programming Enable bit
  1414                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1415                           ;	In-Circuit Debugger Mode bit
  1416                           ;	DEBUG = 0x1, unprogrammed default
  1417  2007                     	org	8199
  1418  2007  20D4               	dw	8404
  1419                           
  1420                           ;Config register CONFIG2 @ 0x2008
  1421                           ;	Brown-out Reset Selection bit
  1422                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1423                           ;	Flash Program Memory Self Write Enable bits
  1424                           ;	WRT = OFF, Write protection off
  1425  2008                     	org	8200
  1426  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         6
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      9      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _mostrar->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1598
                            _mostrar
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mostrar                                              0     0      0    1598
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mostrar
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      1D       5       36.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 09 23:05:51 2022

                      pc 0002                       l57 01D6                       l81 01EF  
                     l76 01A5             ___awdiv@sign 0030                       fsr 0004  
                    l323 00FB                      l336 0156                      l800 01D5  
                    l760 01B7                      l770 01BE                      l762 01BA  
                    l780 01C3                      l772 01BF                      l764 01BB  
                    l790 01C8                      l782 01C4                      l774 01C0  
                    l766 01BC                      l758 01A6                      l792 01C9  
                    l784 01C5                      l776 01C1                      l768 01BD  
                    l794 01CD                      l786 01C6                      l778 01C2  
                    l796 01CE                      l788 01C7                      l798 01CF  
                    l996 0093                      l998 0096                      u610 00ED  
                    u530 009A                      u611 00EC                      u531 0099  
                    u620 00F2                      u540 00A5                      u700 0148  
                    u621 00F1                      u605 00E1                      u541 00A4  
                    u701 0147                      u550 00B6                      u710 014D  
                    u630 0103                      u551 00B5                      u711 014C  
                    u631 0102                      u640 010E                      u641 010D  
                    u570 00C8                      u650 0119                      u571 00C7  
                    u651 0118                      u565 00BA                      u590 00D9  
                    u670 012B                      u591 00D8                      u671 012A  
                    u680 0135                      u585 00C9                      u681 0134  
                    u665 011D                      u595 00D5                      u685 0131  
                    u695 013C                      _isr 0029                      fsr0 0004  
                    indf 0000             ___awmod@sign 0030                     l1000 009A  
                   l1010 00AE                     l1002 009F                     l1020 00C4  
                   l1012 00B0                     l1004 00A1                     l1030 00E7  
                   l1022 00C8                     l1014 00B6                     l1006 00A5  
                   l1024 00D9                     l1016 00B9                     l1032 00ED  
                   l1008 00AA                     l1040 00FC                     l1034 00F2  
                   l1026 00DF                     l1018 00C0                     l1050 010E  
                   l1042 00FF                     l1036 00F7                     l1028 00E0  
                   l1060 0127                     l1052 0113                     l1044 0103  
                   l1062 012B                     l1054 0119                     l1070 0148  
                   l1046 0108                     l1072 014D                     l1064 0135  
                   l1056 011C                     l1048 010A                     l1080 01EA  
                   l1074 0152                     l1066 013B                     l1058 0123  
                   l1068 0142                     l1078 0157                     ?_isr 0070  
                   _T0IF 005A                     i1l62 0048                     i1l63 003F  
                   i1l73 008A                     i1l67 008A                     _TMR0 0001  
                   _band 0075                     _main 01EA                     _sobr 0033  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 00FC          __end_of___awmod 0157  
                  _ANSEL 0188          ___awdiv@divisor 002A                    i1l950 0043  
                  i1l942 0029                    i1l960 0051                    i1l944 002D  
                  i1l970 0060                    i1l962 0052                    i1l954 0046  
                  i1l946 0033                    i1l980 0073                    i1l964 0058  
                  i1l972 0065                    i1l956 004C                    i1l948 0037  
                  i1l990 0087                    i1l974 006B                    i1l982 0078  
                  i1l966 005E                    i1l958 004D                    i1l984 007F  
                  i1l976 0071                    i1l968 005F                    i1l986 0085  
                  i1l978 0072                    i1l988 0086          ___awdiv@counter 002F  
                  u50_20 0058                    u50_21 0057                    u51_20 006B  
                  u51_21 006A                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    u52_20 007F                    u52_21 007E  
                  u46_20 002D                    u46_21 002C                    u47_20 0033  
                  u47_21 0032                    u48_20 0043                    u48_21 0042  
                  u49_20 004C                    u49_21 004B                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _conta 0077  
                  _tabla 0020                    _setup 01A6                    pclath 000A  
        __end_of_mostrar 01A6                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 01F8                   ??_main 0075  
       ___awdiv@dividend 002C                   ?_setup 0070                   _ANSELH 0189  
              ??___awdiv 002E                   _decena 0037                ??___awmod 002E  
       ___awdiv@quotient 0031          ___awmod@divisor 002A          ___awmod@counter 002F  
                 _unidad 0039                   saved_w 007E                ??_mostrar 0075  
__end_of__initialization 0025           __pcstackCOMMON 0070             __pidataBANK0 01F8  
          __end_of_setup 01D7           _OPTION_REGbits 0081                  ??_setup 0075  
             __pbssBANK0 003B               _acumulador 0078               __pmaintext 01EA  
             __pintentry 0004                  ___awdiv 0093                  ___awmod 00FC  
                _centena 0035                  __ptext1 01A6                  __ptext2 0157  
                __ptext3 00FC                  __ptext4 0093                  __ptext5 0029  
                _display 003B         ___awmod@dividend 002C                  _mostrar 0157  
   end_of_initialization 0025                _PORTBbits 0006                _PORTDbits 0008  
              _TRISBbits 0086      start_initialization 0011              __end_of_isr 0093  
             init_fetch0 01D7              __pdataBANK0 0020              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 002A                __pnvBANK0 0033  
               ?___awdiv 002A                 ?___awmod 002A                 ?_mostrar 0070  
      interrupt_function 0004                 _IOCBbits 0096                 _WPUBbits 0095  
             _INTCONbits 000B                 init_ram0 01DB                 intlevel1 0000  
             _OSCCONbits 008F  
